[color]
	ui = auto
[advice]
	pushNonFastForward = false
	statusHints = false
[core]
	whitespace = fix,trailing-space,space-before-tab
	autocrlf = input
	filemode = false
[apply]
	whitespace = nowarn
[branch]
	autosetupmerge = true
[push]
	default = tracking
[help]
	autocorrect = 1
[branch "master"]
	merge = refs/heads/master
	remote = origin
[alias]
	### Basic shortcuts
	git = !git
	st = status
	br = branch
	co = checkout
	
	### Stashing
	sp = stash pop
	sl = stash list

	### Verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	### Committing
	# Amends last commit using the same commit message
	amend = !"git log -n 1 --pretty=tformat:%s | git commit -F - --amend"

	### Rebase
	# pull complete versions of our changes or their changes
	ours = "!f() { git checkout --ours "$@" && git add "$@"; }; f"
	theirs = "!f() { git checkout --theirs "$@" && git add "$@"; }; f"

	### Logging
	# View the SHA, description, and history graph of the latest commits
	l = log --pretty=oneline --graph --decorate --all
	# show tree view of the git log
	tree = log --graph --decorate --pretty=oneline --abbrev-commit --all

	### Pushing
	# Undo a `git push`
	undopush = push -f origin HEAD^:master

	### Syncing
	# Go to master and pull in origin master
	pm = !"git checkout master && git pull origin master && true"
	# Pull in remote changes for the current repository and all its submodules
	p = !"git pull; git submodule foreach git pull origin master && true"
	# Pull in remote changes for the current repository and update all submodules
	ps = !"git pull; git submodule foreach git submodule update --init --recursive && true"
	# Push the current branch to origin with the same branch name
	pob = !"git push "$@" origin $(git brn) && true"

	########### GITHUB based aliases
	# Go to the master branch then sync local and origin with [upstream|origin]
	sync = "!f() { local PREV_BR="$(git brn)"; [[ "$PREV_BR" != "master" ]] && git checkout master; git pull $(R="$(git remote -v | grep '^upstream\\>')"; if [ $? -eq 0  ]; then echo 'upstream'; else echo 'origin'; fi) master; git submodule update; git push origin master; [[ "$PREV_BR" != "master" ]] && git co "$PREV_BR" || git co; }; f"
	# Gets the github url for current repo
	hub = !"echo "https://github.com/"$(git config remote.origin.url) | sed -E s/[a-z]+@github\\.com:// | sed s/\\.git$// && true"
	# Gets the url to github of the current commit
	hub-url = !"sh -c 'HEAD=$(git rev-parse HEAD) && SHA1=$([ "$0" = "sh" ] && echo $HEAD || echo $0) && echo $(git hub)"/commit/"${SHA1}' && true"
